[package]
name = "birds_psy"
version = "0.1.0"
edition = "2021"
build = "build.rs"

[lib]
crate-type = ["cdylib", "rlib"]

[build]
rustflags = ["--cfg=sqlx_macros_unstable"]

[build-dependencies]
sailfish = "0.8.1"
ulid = { version = "1.1.0" }

[dependencies]
axum = { version = "0.6.4", optional = true, features = ["tracing"]}
console_error_panic_hook = "0.1"
console_log = "1"
cfg-if = "1"
leptos = { version = "0.5", features = ["nightly", "rustls"] }
leptos_axum = { version = "0.5", optional = true, features = ["default"] }
leptos_meta = { version = "0.5", features = ["nightly"] }
leptos_router = { version = "0.5", features = ["nightly"] }
log = "0.4"
simple_logger = "4"
tokio = { version = "1.25.0", optional = true }
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.4", features = ["fs", "cors", "trace"], optional = true }
wasm-bindgen = "=0.2.89"
thiserror = "1.0.38"
tracing = { version = "0.1.37", optional = true }
http = "0.2.8"
leptos-use = { version = "0.8.2" }
leptos_icons = { version = "0.1.0", default_features = false, features = ["IoCall", "IoCheckmarkDoneCircleSharp"] }
serde = { version = "1.0.192", features = ["derive"] }
chrono = { version = "0.4.31", features = ["serde"] }
ulid = { version = "1.1.0", features = ["serde"] }
sqlx = { version = "0.7.2", features = ["chrono", "postgres", "runtime-tokio"], optional = true }
async-trait = { version = "0.1.74", optional = true }
tower-cookies = { version = "0.9.0", optional = true }
once_cell = { version = "1.18.0", optional = true }
strum = { version = "0.25.0", features = ["derive"] }
pasetors = { version = "0.6.7", optional = true, features = ["paserk"] }
anyhow = "1.0.75"
web-sys = { version = "0.3", features = ["PushSubscriptionJson", "PushManager", "PushSubscriptionOptionsInit", "PushSubscription"] }
wasm-bindgen-futures = { version = "0.4" }
base64 = "0.21.5"
js-sys = "0.3.66"
serde_json = { version = "1.0.108", optional = true }
web-push = { version = "0.10.0", optional = true }
# leptos_animated_for = version = "0.0.4", features = ["ssr"] }

[features]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
    "dep:axum",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "leptos-use/ssr",
    # "leptos_animated_for/ssr",
    "dep:tracing",
    "dep:sqlx",
    "dep:async-trait",
    "dep:tower-cookies",
    "dep:once_cell",
    "dep:pasetors",
    "dep:serde_json",
    "dep:web-push",
]


[package.metadata.cargo-all-features]
denylist = ["axum", "tower", "tower-http", "tokio", "sqlx", "leptos_axum"]
skip_feature_sets = [["ssr", "hydrate"]]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "birds-psy"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# separate-front-target-dir = true
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
# style-file = "style/main.scss"
tailwind-input-file = "style/tailwind.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
